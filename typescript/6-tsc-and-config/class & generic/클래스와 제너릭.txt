type inference 타입 추론:

타입 추론이란 컴파일러가 자동으로 변수,표현식 등의 타입을 결정하는 프로세스

명시적인 타입 지정이 없더라도 컴파일러가 코드의 문맥을 기반으로 적절한 타입을 추론

타입 추론을 적절히 사용하면 코드가 간결해진다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
type Assertion 타입 단언:

타입 단언이란, 직접 컴파일러에게 변수나 객체가 가진 타입에 대해 알리는 방식
개발자가 해당 타입에 대해 더 많은 정보를 가지고 있는 경우
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
classes

클래스는 객체를 생성하기 위한 하나의 청사진/템플릿 역할을 한다
es6에서 도입된 클래스 문법 기반
생성자,속성,메소드로 구성

Access Modifiers
public : 외부에서 접근 가능( 기본)
private /# : 해당 클래스내부에서만 접근 가능
protected: 클래스 내부 및 서브클래스에서 접근 가능
(메소드로 불러와야 함)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Generics
함수,클래스,인터페이스 등에 타입을 매개변수처럼 사용할 수 있게 한다.
다양한 타입의 데이터를 처리할 수 있는 범용적인 패턴 제공
유사한 기능을 하느 함수, 클래스등을 하나로 통합할 수 있다.
장점
코드 재사용성 증가
유연성과 확장성
명시적인 타입 표현
단점
러닝 커브
복잡성 증가
컴파일 시간 증가